---
title: "github prac//afternoon exercises"
author: "kimmy wong"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
# load packages ----

library(tidyverse)

# define function ; shortcut: command,option,x ---- 
eq1 <- function(x) {
  3*x^2+4
}

# create a dataframe w/ range of values to evaluate our fxn across ----

my_data_range<-data.frame(x=c(1,100))


# plot function as a continuous curve over our specified range of values in our df ----

ggplot(data=my_data_range,aes(x=x)) +
  geom_function(fun=eq1)
```


# exercise 2

```{r}
# define function ----
eq2 <- function(x) {
  2.4-(5*x^3)+(2.1*x^2)
}

# create a dataframe w/ range of values to evaluate our fxn across ----

new_data_range<-data.frame(x=c(-50,50))

# plot function as a continuous curve over our specified range of values in our df ----

ggplot(data=new_data_range,aes(x=x)) +
  geom_function(fun=eq2)
```

# graphing derivative and orig fxn

```{r}
# create new function C(t) ----
ct <- function(t) {
  t^3
}

# take deriv of ct ----
dc_dt<-D(expr=expression(t^3),name="t")

# create deriv ft. ----
dc_dt_fun <- function(t) {
  3*t^2
}


#df of values ----
data_range<-data.frame(t=c(-5,5))

# plot function
ggplot(data=data_range,aes(x=t)) +
  geom_function(fun=ct,color="red") +
  geom_function(fun=dc_dt_fun,color="blue")
```

```{r}
# create expression ----
f_xyz<- expression (2*x*y - 3*x^2*z^3)

# partial w/ respect to x ----
df_dx <- D(f_xyz, name="x")
```



